import re

include: "../annotation/common.snake"

silva_fmts=config.setdefault('silva_fmts',{})
for db, db_data in config['dbs'].items():
    if db_data.get('type')=='rrna':
        fmt = db_data.get('format','lastdb')
        if fmt=='bwadb':
            fmt='sam'
        silva_fmts[db]=fmt

logger.debug("silva_fmts: %r" % silva_fmts)

rule silva_all:
    input:
        expand("{file_root}.annot.{db_dot_fmt}.{rank}.count.tsv",
               file_root=config.get('file_root','reads'),
               rank=config.get('clade_ranks',['order']),
               db_dot_fmt=['{}.{}'.format(d,a) for d,a in silva_fmts.items()])

logger.debug(repr(rules.silva_all.input))

rule map_reads_to_bwadb:
    """
    map reads to BWA db. 
    There must be a bwa formatted db path configured in:
        config['dbs'][wildcards.db]['path']
    """
    input:
        "{file_root}.fastq"
    output:
        ("{file_root}.vs.{db}.sam")
    log:
        "logs/{file_root}.vs.{db}.sam.log"
    benchmark:
        "benchmarks/{file_root}.vs.{db}.sam.time"
    version:
        get_version('bwa', 
                    version_flag="", 
                    regular_expression=re.compile(r'Version:\s*(\S[^\n\r]+\S)'))
    threads:
        lambda w: config['threads'].get('bwa',default_threads)
    params:
        db_path=lambda w: config['dbs'][w.db]['path'],
    shell:
        "bwa mem -t {threads} {params.db_path} {input} 2> {log}  > {output}"

"""
rule count_tax_hits:
    input:
        "{hit_table_prefix}.annot.{db}.{alg}.{rank}.tsv"
    output:
        "{hit_table_prefix}.annot.{db}.{alg}.{rank}.count.tsv"
    benchmark:
        "benchmarks/{hit_table_prefix}.{db}.{alg}.{rank}.count.time"
    log:
        "logs/{hit_table_prefix}.{db}.{alg}.{rank}.count.log"
    shell:
        "count_hits.py -v -i {input} -H 1 -a portion\
        > {output} 2> {log}"
"""

