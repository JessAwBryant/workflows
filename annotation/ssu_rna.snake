"""
This workflow pulls out SSU rRNA genes using sortmeRNA, quality trims and joins pairs, then runs riboframe.

Structure:
+-.gitignore
+--README.md
+--LICENSE.md
+--config.yaml ssu_rna.snake
+--environment: workflows/test/conda/cDNA.yml
+--workflows: workflows/annotation/ssu_rna.snake 
+--scripts
|   +- python scripts: /tools/pymg/
|   +-
+- sortmeRNA hmms: /slipstream/home/jbryant/databases/
+--Snakefile

environment: source activate cDNA
example config file: config.cazy.yml (located /workflows/test/data/configs/config.cazy.yml

usage: snakemake -s ~/workflows/annotation/ssu_rna.snake --configfile ~/workflows/test/data/configs/ssu_rna.yml
"""

import os
import sys

snakefile_path = os.path.dirname(os.path.abspath(workflow.snakefile))[0:-11]
pymg_dir = os.path.sep.join([snakefile_path, 'tools', 'pymg'])

sys.path.append(snakefile_path)
sys.path.append(pymg_dir)
sortmerna_database_dir = "/slipstream/home/jbryant/databases/sortmerna/"
#
RIBOFRAME_DIR="/slipstream/home/jbryant/workflows/scripts/riboframe/hmms/"
CLASSIFIER_JAR="/home/jbryant/programs/riboFrame/rdp_classifier_2.12/dist/classifier.jar"

config['sample_names']=[os.path.basename(x) for x in config['sample_data']]
config['sample_strip']=[os.path.splitext(x)[0] for x in config['sample_names']]

rule all:
     input: 
          expand("ssu_rRNA/{sample_nameS}.rna.fastq", sample_nameS=config['sample_strip']),
          expand("ssu_rRNA/{sample_name_23}.rna.2.fastq", sample_name_23=config['sample_strip']),
          expand("ssu_rRNA/{sample_name_assembled}.rna.2.assembled.fastq", sample_name_assembled=config['sample_strip']),
          expand("ssu_rRNA/{sample_name_assembled}.rna.2.assembled.hmms.archR", sample_name_assembled=config['sample_strip'])

rule sortmerna:
    """
    run sortmerna interleaved sequences
    """
    
    input:
        "{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.fastq"

    output:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.fastq"
    log:
        "logs/sortmerna.log"
    params:
        prefix="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna"

    benchmark:
        "benchmarks/sortmerna.txt"
    shell:
        """
        echo {input}
        sortmerna --ref {sortmerna_database_dir}silva-euk-18s-id95.fasta,{sortmerna_database_dir}silva-euk-18s-id95.db:{sortmerna_database_dir}silva-bac-16s-id90.fasta,{sortmerna_database_dir}silva-bac-16s-id90.db:{sortmerna_database_dir}silva-arc-16s-id95.fasta,{sortmerna_database_dir}silva-arc-16s-id95.db --reads {input} --aligned {params.prefix} --fastx --paired_in -F -m 10000
        """

rule remove_23S:
    """
    Re-run sortmerna but this time exclude 23S
    """
    
    input:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.fastq"

    output:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.fastq"
        
    log:
        "logs/sortmerna_II.log"
        
    params:
        prefix="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2"

    benchmark:
        "benchmarks/sortmerna.txt"
    shell:
        """
        echo {input}
        sortmerna --ref {sortmerna_database_dir}silva-euk-28s-id98.fasta,{sortmerna_database_dir}silva-euk-28s-id98.db:{sortmerna_database_dir}silva-bac-23s-id98.fasta,{sortmerna_database_dir}silva-bac-23s-id98.db:{sortmerna_database_dir}silva-arc-23s-id98.fasta,{sortmerna_database_dir}silva-arc-23s-id98.db --reads {input} --other {params.prefix} --fastx --paired_in -F -m 10000 --aligned ssu_rRNA/SSU23.fastq
        """

rule separate_interleaved:
    """
    Separate interleaved file into two separate files for PEAR
    """
    
    input:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.fastq"

    output:
        forward = "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2_1.fastq",
        reverse = "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2_2.fastq"
        
    log:
        "logs/seqtk.log"
        
    benchmark:
        "benchmarks/sortmerna.txt"
    shell:
        """
        seqtk seq -1 {input} >{output.forward}
        seqtk seq -2 {input} >{output.reverse}
        """


rule assemble:
    """
    Assemble Paired ends
    """
    
    input:
        forward = "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2_1.fastq",
        reverse = "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2_2.fastq"

    output:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.fastq"
        
    log:
        "logs/pear.log"
        
    params:
        prefix="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2"

    benchmark:
        "benchmarks/sortmerna.txt"
    shell:
        """
        pear -f {input.forward} -r {input.reverse} -o {params.prefix} >> logs/pear.log
        """
        

rule fastq_to_fasta:
    """
    Fastq to Fasta
    """
    
    input:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.fastq"
    output:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.fasta"
        
    benchmark:
        "benchmarks/seqtk.txt"
    shell:
        """
        seqtk seq -A {input} > {output}
        """


rule riboframe_hmms:
    """
    Hmm search
    """
    
    input:
        "ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.fasta"
    output:
        bact_for="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.hmms.bactF",
        bact_rev="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.hmms.bactR",
        arch_for="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.hmms.archF",
        arch_rev="ssu_rRNA/{sample_name}.renamed.interleaved.noadapt.nophix.corrected.trimmed.dropse.rna.2.assembled.hmms.archR"

    benchmark:
        "benchmarks/riboframe.txt"

    shell:
        """
        hmmsearch -E 0.00001 --domtblout {output.bact_for} --noali --cpu 2 -o {RIBOFRAME_DIR}16S_bact_for3.hmm
        hmmsearch -E 0.00001 --domtblout {output.bact_rev} --noali --cpu 2 -o {RIBOFRAME_DIR}16S_bact_rev3.hmm
        hmmsearch -E 0.00001 --domtblout {output.arch_for} --noali --cpu 2 -o {RIBOFRAME_DIR}16S_arch_for3.hmm
        hmmsearch -E 0.00001 --domtblout {output.arch_rev} --noali --cpu 2 -o {RIBOFRAME_DIR}16S_bact_rev3.hmm
        """

#        perl /slipstream/home/jbryant/workflows/scripts/riboframe/riboTrap.pl {input} nopair
