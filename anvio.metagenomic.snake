"""
Python Makefile to process multiple samples via megahit and AnVio per:
http://merenlab.org/2016/06/22/anvio-tutorial-v2/

To run:

snakemake -s /path/to/workflows/anvio.metagenomic.snake --configfile anvio.metagenomic.yaml [OPTIONS]

The following conda packages will install everything you need:
conda create -n snakemake -c bioconda python=3 snakemake pandas biopython bbmap
bfc megahit bwa samtools prinseq seqtk

NOTES for OSX:
 * megahit is not (yet) in conda, you will have to install it manually
 * add "sed" to the list of conda packages to install
   (the default sed on OSX has a different syntax)

Anvio must be installed in the runing environmetn or in a conda environment. If it is installed in a conda environment, set the config variable anvio_env to te name of that environment.

With a config file like this to run megahit on a set of fastq reads files:
samples_pattern:
    glob: "../data/*.fastq"
    re: "/([^_]+)_[^/]+\.fastq"
    cleaned: False
    name: all
    metadata: samples.all.tsv
megahit:
    preset: meta
threads:
    bwa:     10
    megahit: 40
centrifuge:
    path: /path/to/centrifuge
    db: dbs/p+h+v
anvio_env: anvio

The fields in samples_pattern are:
 glob: a path wildcard that will match all the fastq files you want to include
 re: a regular expression pattern that will pull the sample name from each fasta file
 cleaned: Set to true to skip QC
 name: string to use in naming combined outputs

Or to skip assembly and specify a contigs file against which to compare reads:
samples_pattern:
    glob: "../data/*.fastq"
    re: "/([^_]+)_[^/]+\.fastq"
    cleaned: True
    name: all
    metadata: samples.all.tsv
contigs_fasta: /path/to/contigs.fasta
threads:
    bwa:         10
    anvi-profile: 3
centrifuge:
    path: /path/to/centrifuge
    db: dbs/p+h+v
anvio_env: anvio

"""
from python.common import get_version
from python.anvio import collect_sample_reads
from snakemake.logging import logger
import yaml

######################
# Configuration
transitions = config.setdefault('transitions',{})
#
# Get sample reads from dir and pattern if not provided
needs_qc = collect_sample_reads(config)
if needs_qc:
    include: "qc/bfc.snake"
#
# if contigs_fasta is not set, pull in megahit
run_assembly = 'megahit' in config
if run_assembly:
    include: "assembly/metagenomic.megahit.snake"
    # output of megahit becomes start of anvio workflow
    transitions['contigs.raw.fasta'] \
                    = "megahit-{params}/megahit.contigs.fa" \
                                .format(params=config['megahit']\
                                                .get('preset','meta-sensitive'))
else:
    # work from existing contigs
    if config.setdefault('contigs_fasta','contigs.raw.fasta') != 'contigs.raw.fasta':
        transitions['contigs.raw.fasta'] = config['contigs_fasta']
#
# This list will be filled in by the anvio/anvio.* snakefiles
outputs = config.setdefault('outputs',set())
#
# generate simple statistics (prinseq) and histogram from contigs
for ext in ['stats', 'hist']:
    for file_name in ['contigs.fasta', 'anvio/contigs.fa']:
        outputs.add(".".join((file_name, ext)))
#
# End Configuration
######################

# the samples snakefile will pull in profiles and contigs
include: "anvio/anvio.samples.snake"
include: "common/transitions.snake"
include: "common/common.snake"

logger.debug("Snakefile config:\n" + yaml.dump(config))

######################
# Rules
rule anvio_all:
    input: outputs
