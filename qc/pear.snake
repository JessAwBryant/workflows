from python.pear import dummy_join_fastq

include: "tmatic.snake"

rule run_pear:
    """ Joins paired illumina reads """
    input:
        fwd="{file_root}.R1.paired.fastq",
        rev="{file_root}.R2.paired.fastq",
    output:
       "{file_root}.paired.discarded.fastq",
       "{file_root}.paired.assembled.fastq",
       "{file_root}.paired.unassembled.forward.fastq",
       "{file_root}.paired.unassembled.reverse.fastq",
    log:
        "logs/{file_root}.paired.pear.log",
    benchmark:
        "benchmarks/{file_root}.pear.time"
    version:
        get_version('pear',"-h",
                    regular_expression=r'PEAR\s+v[.0-9]+')
    params:
        opts=config.get('pear_opts','-p 0.01'),
        output="{file_root}.paired"
    shell:
        "pear -f {input.fwd} -r {input.rev} {params.opts} \
        -o {params.output} > {log} 2>&1"

rule dummy_join:
    """ Joins unjoined illumina read pairs """
    input:
        fwd="{file_root}.unassembled.forward.trimmed.fastq",
        rev="{file_root}.unassembled.reverse.trimmed.fastq"
    output:
        "{file_root}.trimmed.dummy.fastq"
    log:
        "logs/{file_root}.dummy.log"
    benchmark:
        "benchmarks/{file_root}.dummy.time"
    run:
        dummy_join_fastq(input, output, log)

rule merge_pear:
    """ merges pear joins and dummy joins (after some end-trimming) """
    input:
        pear="{file_root}.paired.assembled.trimmed.fastq",
        dummy="{file_root}.paired.trimmed.dummy.fastq",
        unpaired1="{file_root}.R1.unpaired.fastq",
        unpaired2="{file_root}.R2.unpaired.fastq",
    output:
        merged="{file_root}.joined.trimmed.merged.fastq"
    log:
        "logs/{file_root}.joined.trimmed.merged.log"
    benchmark:
        "benchmarks/{file_root}.joined.trimmed.merge.time"
    shell:
        "cat {input} > {output}"
