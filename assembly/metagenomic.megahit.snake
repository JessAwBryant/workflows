"""
Python Makefile to assemble reads from multiple samples into a single assembly
with megahit.
"""
#include: "../common/common.snake"

####
# Required conda packages:
#
# snakemake prodigal megahit bwa
###

######################
# Configuration
#
# Default to "meta" preset for megahit
config.setdefault('megahit',{}).setdefault('preset','meta')
# 
#
# Configuration
######################


######################
# Rules
rule all:
    input:
        "contigs.fasta.stats",

rule megahit:
    """
    requires "reads" dictionary in config with map from sample names to list of fastq files of prepped reads for each sample
    """
    input:
        [reads for sample,reads in config['reads'].items()]
    output:
        "megahit-{params}/megahit.contigs.fa"
    log:
        "logs/megahit-{params}.log"
    benchmark:
        "benchmarks/megahit-{params}.time"
    version:
        get_version('megahit')
    params:
        preset=lambda w: w.params,
        inputs=','.join([r for s,r in config['reads'].items()])
    threads:
        40
    shell:
        "megahit --12 {params.inputs} --presets {params.preset} -t {threads}\
         --continue -o megahit-{params.preset} --out-prefix megahit --verbose\
         > {log} 2>&1"


rule contigs:
    input:
        "megahit-{params}/megahit.contigs.fa".format(params=config['megahit']['preset'])
    output:
        "contigs.fasta"
    shell:
        "ln -s {input} {output}"

