"""
Python Makefile to assemble reads from multiple samples into a single assembly
with megahit.
"""
#include: "../common/common.snake"

####
# Required conda packages:
#
# snakemake prodigal megahit bwa
###

######################
# Configuration
#
# Default to "meta" preset for megahit
config.setdefault('megahit',{}).setdefault('preset','meta-sensitive')
config['megahit'].setdefault('threads', 40)
# 
######################

cleaned_reads = [data['clean'] \
                         for sample,data in config['sample_data'].items() \
                         if 'clean' in data]

######################
# Rules
rule megahit:
    """
    requires "reads" dictionary in config with map from sample names to list of fastq files of prepped reads for each sample
    """
    input:
        cleaned_reads
    output:
        "megahit-{params}/megahit.contigs.fa"
    log:
        "logs/megahit-{params}.log"
    benchmark:
        "benchmarks/megahit-{params}.time"
    version:
        get_version('megahit')
    params:
        preset=lambda w: w.params,
        inputs=','.join(cleaned_reads)
    threads:
        config['megahit']['threads']
    shell:
        "megahit --12 {params.inputs} --presets {params.preset} -t {threads}\
         --continue -o megahit-{params.preset} --out-prefix megahit --verbose\
         > {log} 2>&1"


